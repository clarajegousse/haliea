df$year == "2017" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
scale_color_manual(values = phylum.col) + theme(legend.position="right") +
ggtitle(label = paste(df$abund.type, df$year, df$season, df$stn, sep = " - "))
p
my_param <- c("Relative", "2017", "Spring", "SB5")
p <- ggboxplot(df[df$abund.type == my_param[1] &
df$year == "2017" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
scale_color_manual(values = phylum.col) + theme(legend.position="right") +
ggtitle(label = paste(df$abund.type, df$year, df$season, df$stn, sep = " - "))
p
p <- ggboxplot(df[df$abund.type == my_param[1] &
df$year == "2017" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
scale_color_manual(values = phylum.col) + theme(legend.position="right") +
ggtitle(label = paste(my_param[1], df$year, df$season, df$stn, sep = " - "))
p
my_param <- c("Relative", "2017", "Spring", "SB5")
p <- ggboxplot(df[df$abund.type == my_param[1] &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4] &
df$db != "NCBI euk",], x = "db", y = "Abundance", color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
scale_color_manual(values = phylum.col) + theme(legend.position="right") +
ggtitle(label = paste(my_param[1], df$year, df$season, df$stn, sep = " - "))
p
p <- ggboxplot(df[df$abund.type == my_param[1] &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4] &
df$db != "NCBI euk",], x = "db", y = "Abundance", color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
scale_color_manual(values = phylum.col) + theme(legend.position="right") +
ggtitle(label = paste(my_param[1], "abundance,", my_param[2], my_param[3], my_param[4], sep = " "))
p
p <- ggboxplot(df[df$abund.type == my_param[1] &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4] &
df$db != "NCBI euk",], x = "db", y = "Abundance", color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
scale_color_manual(values = phylum.col) + theme(legend.position="right") +
ggtitle(label = paste(my_param[1], "abundance,", my_param[3], my_param[2], my_param[4], sep = " "))
p
p <- ggboxplot(df[df$abund.type == my_param[1] &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4] &
df$db != "NCBI euk",], x = "db", y = "Abundance", color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
scale_color_manual(values = phylum.col) + theme(legend.position="right") +
ggtitle(label = paste(my_param[1], "abundance,", my_param[3], my_param[2], "at station", my_param[4], sep = " "))
p
p <- ggboxplot(df[df$abund.type == my_param[1] &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4] &
df$db != "NCBI euk",], x = "db", y = "Abundance", color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
scale_color_manual(values = phylum.col) + theme(legend.position="right") +
ggtitle(label = paste("Comparison of", my_param[1], "abundance,", my_param[3], my_param[2], "at station", my_param[4], sep = " "))
p
my_param <- c("Relative", "2016", "Spring", "SB5")
p <- ggboxplot(df[df$abund.type == my_param[1] &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4] &
df$db != "NCBI euk",], x = "db", y = "Abundance", color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
scale_color_manual(values = phylum.col) + theme(legend.position="right") +
ggtitle(label = paste("Comparison of", my_param[1], "abundances,", my_param[3], my_param[2], "at station", my_param[4], sep = " "))
p
? stat_compare_means
chisq.test(prop$Amplicon, prop$Metag)
chisq.test(prop$Amplicon, prop$Metag, simulate.p.value = TRUE)
mg <- df[df$abund.type == "Relative" & df$db == "GTDB" &
df$year == "2017" & df$season == "Spring" & df$stn == "SB5",]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == "Relative" & df$db == "Silva" &
df$year == "2017" & df$season == "Spring" & df$stn == "SB5",]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
mg <- df[df$abund.type == "Relative" & df$db == "GTDB" &
df$year == "2017" & df$season == "Spring" & df$stn == "SB5",]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == "Relative" & df$db == "Silva" &
df$year == "2017" & df$season == "Spring" & df$stn == "SB5",]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
chisq.test(prop$Amplicon, prop$Metag, simulate.p.value = TRUE)
mg <- df[df$abund.type == "Raw" & df$db == "GTDB" &
df$year == "2016" & df$season == "Spring" & df$stn == "SB5",]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == "Raw" & df$db == "Silva" &
df$year == "2016" & df$season == "Spring" & df$stn == "SB5",]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
#prop <- join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
chisq.test(prop$Amplicon, prop$Metag, simulate.p.value = TRUE)
mg <- df[df$abund.type == "Relative" & df$db == "GTDB" &
df$year == "2017" & df$season == "Spring" & df$stn == "SB5",]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == "Relative" & df$db == "Silva" &
df$year == "2017" & df$season == "Spring" & df$stn == "SB5",]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
mg <- df[df$abund.type == "Relative" & df$db == "GTDB" &
df$year == "2015" & df$season == "Spring" & df$stn == "SB5",]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == "Relative" & df$db == "Silva" &
df$year == "2015" & df$season == "Spring" & df$stn == "SB5",]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
chisq.test(prop$Amplicon, prop$Metag, simulate.p.value = TRUE)
mg <- df[df$abund.type == "Relative" & df$db == "GTDB" &
df$year == "2016" & df$season == "Spring" & df$stn == "SI8",]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == "Relative" & df$db == "Silva" &
df$year == "2016" & df$season == "Spring" & df$stn == "SI8",]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
chisq.test(prop$Amplicon, prop$Metag, simulate.p.value = TRUE)
mg <- df[df$abund.type == "Relative" & df$db == "GTDB" &
df$year == "2016" & df$season == "Spring" & df$stn == "SI8",]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == "Relative" & df$db == "Silva" &
df$year == "2016" & df$season == "Spring" & df$stn == "SI8",]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
mg <- df[df$abund.type == "Relative" & df$db == "GTDB" &
df$year == "2016" & df$season == "Spring" & df$stn == "SB5",]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == "Relative" & df$db == "Silva" &
df$year == "2016" & df$season == "Spring" & df$stn == "SB5",]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
chisq.test(prop$Amplicon, prop$Metag, simulate.p.value = TRUE)
mg <- df[df$abund.type == "Relative" & df$db == "GTDB" &
df$year == "2017" & df$season == "Spring" & df$stn == "SI8",]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == "Relative" & df$db == "Silva" &
df$year == "2017" & df$season == "Spring" & df$stn == "SI8",]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
chisq.test(prop$Amplicon, prop$Metag, simulate.p.value = TRUE)
mg <- df[df$abund.type == "Raw" & df$db == "GTDB" &
df$year == "2016" & df$season == "Spring" & df$stn == "SB5",]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == "Raw" & df$db == "Silva" &
df$year == "2016" & df$season == "Spring" & df$stn == "SB5",]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
#prop <- join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
y
mg <- df[df$abund.type == "Relative" & df$db == "GTDB" &
df$year == "2017" & df$season == "Spring" & df$stn == "SI8",]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == "Relative" & df$db == "Silva" &
df$year == "2017" & df$season == "Spring" & df$stn == "SI8",]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
mg <- df[df$abund.type == "Relative" & df$db == "GTDB" &
df$year == "2017" & df$season == "Spring" & df$stn == "SI3",]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == "Relative" & df$db == "Silva" &
df$year == "2017" & df$season == "Spring" & df$stn == "SI3",]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
chisq.test(prop$Amplicon, prop$Metag, simulate.p.value = TRUE)
my_param <- c("Relative", "2017", "Spring", "SB5")
mg <- df[df$abund.type == my_param[1] & df$db == "GTDB" &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4],]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == my_param[1] & df$db == "Silva" &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4],]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
my_param <- c("Relative", "2017", "Summer", "SI3")
mg <- df[df$abund.type == my_param[1] & df$db == "GTDB" &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4],]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == my_param[1] & df$db == "Silva" &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4],]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
chisq.test(prop$Amplicon, prop$Metag, simulate.p.value = TRUE)
my_param <- c("Relative", "2017", "Summer", "SB2")
mg <- df[df$abund.type == my_param[1] & df$db == "GTDB" &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4],]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == my_param[1] & df$db == "Silva" &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4],]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
my_param <- c("Relative", "2018", "Spring", "SI8")
mg <- df[df$abund.type == my_param[1] & df$db == "GTDB" &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4],]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == my_param[1] & df$db == "Silva" &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4],]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
my_param <- c("Relative", "2018", "Spring", "SI3")
mg <- df[df$abund.type == my_param[1] & df$db == "GTDB" &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4],]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == my_param[1] & df$db == "Silva" &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4],]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
my_param <- c("Relative", "2018", "Spring", "SB2")
mg <- df[df$abund.type == my_param[1] & df$db == "GTDB" &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4],]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == my_param[1] & df$db == "Silva" &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4],]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
my_param <- c("Relative", "2018", "Spring", "SB5")
mg <- df[df$abund.type == my_param[1] & df$db == "GTDB" &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4],]
prop.mg <- aggregate(mg$Abundance, by=list(Category=mg$Phylum), FUN=sum)
mb <- df[df$abund.type == my_param[1] & df$db == "Silva" &
df$year == my_param[2] & df$season == my_param[3] & df$stn == my_param[4],]
prop.mb <- aggregate(mb$Abundance, by=list(Category=mb$Phylum), FUN=sum)
prop <- full_join(prop.mb, prop.mg, by="Category")
colnames(prop) <- c("Category", "Amplicon", "Metag")
prop[is.na(prop)] <- 0
prop
chisq.test(prop$Amplicon, prop$Metag)
ggplot(prop) + geom_col(aes(x=Category))
ggplot(prop) + geom_col(aes(x=Category, y = Amplicon))
ggplot(prop) + geom_col(aes(x=Category, y = Metag))
p <- ggboxplot(df[df$abund.type == "Relative" &
df$year == "2017" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..)))
p
p <- ggboxplot(df[df$abund.type == "Relative" &
df$year == "2017" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) + theme(legend.position = "right")
p
my_comparisons <- list( c("Silva", "GTDB"))
p <- ggboxplot(df[df$abund.type == "Relative" &
df$year == "2015" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) + theme(legend.position = "right")
p
p <- ggboxplot(df[df$abund.type == "Relative" &
df$year == "2015" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
#stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
theme(legend.position = "right")
p
p <- ggboxplot(df[df$abund.type == "Relative" &
df$year == "2015" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", #color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
#stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
theme(legend.position = "right")
p
p <- ggboxplot(df[df$abund.type == "Relative" &
df$year == "2015" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", #color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
theme(legend.position = "right")
p
? stat_compare_means
p <- ggboxplot(df[df$abund.type == "Relative" &
df$year == "2016" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", #color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
theme(legend.position = "right")
p
p <- ggboxplot(df[df$abund.type == "Relative" &
df$year == "2016" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", #color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
theme(legend.position = "right") + scale_y_continuous(trans='log2')
p
p <- ggboxplot(df[df$abund.type == "Relative" &
df$year == "2016" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", #color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
theme(legend.position = "right") + scale_y_continuous(trans='log')
p
p <- ggboxplot(df[df$abund.type == "Relative" &
df$year == "2016" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", #color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
theme(legend.position = "right")# + scale_y_continuous(trans='log')
p
p <- ggboxplot(df[df$abund.type == "Relative" &
df$year == "2016" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", #color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
theme(legend.position = "right") + scale_y_continuous(trans='log')
p
p <- ggboxplot(df[df$abund.type == "Relative" &
df$year == "2016" & df$season == "Spring" & df$stn == "SB5" &
df$db != "NCBI euk",], x = "db", y = "Abundance", #color = "Phylum",
add = "jitter") +
#scale_fill_manual(values = c(Grapefruit, Jeans)) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..))+ # Add pairwise comparisons p-value
stat_compare_means(aes(label = paste0("p = ", ..p.format..))) +
theme(legend.position = "right")
p
core.gtdb  <- taxa_core(tax_glom(ps.gtdb.abund, taxrank = "Genus",  NArm=FALSE),
treatment = "region", subset = NULL,
abundance_threshold = 0.01)
uniq.core.gtdb <- unique_taxa(core.gtdb, treatment = "region")
tax_table(core.gtdb)[uniq.core.gtdb$South,]
tax_table(core.gtdb)[uniq.core.gtdb$North,]
ps.gtdb.abund
core.gtdb  <- taxa_core(tax_glom(ps.gtdb.abund, taxrank = "Genus",  NArm=FALSE),
treatment = "region", subset = NULL,
abundance_threshold = 0.01)
uniq.core.gtdb <- unique_taxa(core.gtdb, treatment = "region")
tax_table(core.gtdb)[uniq.core.gtdb$South,]
tax_table(core.gtdb)[uniq.core.gtdb$North,]
uniq.core.gtdb
core.gtdb  <- taxa_core(tax_glom(ps.gtdb, taxrank = "Genus",  NArm=FALSE),
treatment = "region", subset = NULL,
abundance_threshold = 0.01)
uniq.core.gtdb <- unique_taxa(core.gtdb, treatment = "region")
tax_table(core.gtdb)[uniq.core.gtdb$South,]
tax_table(core.gtdb)[uniq.core.gtdb$North,]
ps.gtdb.abund
core.gtdb  <- taxa_core(tax_glom(ps.gtdb.abund, taxrank = "Genus",  NArm=FALSE),
treatment = "region", subset = NULL,
frequency = 0,
abundance_threshold = 0.01)
uniq.core.gtdb <- unique_taxa(core.gtdb, treatment = "region")
tax_table(core.gtdb)[uniq.core.gtdb$South,]
tax_table(core.gtdb)[uniq.core.gtdb$North,]
df.gtdb
df.gtdb1
df.gtdb1["194105"]
df.gtdb1[df.gtdb1$OTU == "194105",]
ggplot(df.gtdb1[df.gtdb1$OTU == "194105",]) + geom_col(aes(x = Sample, y = Abundance))
ggplot(df.gtdb1[df.gtdb1$OTU == "194105",]) + geom_col(aes(x = stn, y = Abundance))
ggplot(df.gtdb1[df.gtdb1$OTU == "194105",]) + geom_col(aes(x = year, y = Abundance))
ggplot(df.gtdb1[df.gtdb1$OTU == "194105",]) + geom_col(aes(x = year, y = Abundance)) + facet_wrap(~stn)
ggplot(df.gtdb1[df.gtdb1$OTU == "194105",]) + geom_col(aes(x = year, y = Abundance)) + facet_wrap(stn~season)
df.gtdb1[df.gtdb1$OTU == "194105" & df.gtdb1$Abundance >= 0.01,]
ps.gtdb.abund.glom <- tax_glom(ps.gtdb.abund, taxrank = "Genus",  NArm=FALSE)
core.gtdb <- taxa_core(ps.gtdb.abund.glom,
treatment = "region", subset = NULL,
frequency = 0,
abundance_threshold = 0.01)
uniq.core.gtdb <- unique_taxa(core.gtdb, treatment = "region")
tax_table(core.gtdb)[uniq.core.gtdb$South,]
tax_table(core.gtdb)[uniq.core.gtdb$North,]
df.gtdb.core <- psmelt(core.gtdb) # create dataframe from phyloseq object
df.gtdb.core <- df.gtdb.core[c("OTU", "Sample", "Abundance", "stn", "year", "season", "Phylum")]
df.gtdb.core[df.gtdb.core$OTU == "194105" & df.gtdb.core$Abundance >= 0.01,]
ggplot(df.gtdb.core[df.gtdb.core$OTU == "194105",]) + geom_col(aes(x = year, y = Abundance)) + facet_wrap(stn~season)
core.gtdb <- taxa_core(ps.gtdb.abund.glom,
treatment = "region", subset = NULL,
frequency = 0.01,
abundance_threshold = 0.01)
uniq.core.gtdb <- unique_taxa(core.gtdb, treatment = "region")
tax_table(core.gtdb)[uniq.core.gtdb$South,]
tax_table(core.gtdb)[uniq.core.gtdb$North,]
df.gtdb.core <- psmelt(core.gtdb) # create dataframe from phyloseq object
df.gtdb.core <- df.gtdb.core[c("OTU", "Sample", "Abundance", "stn", "year", "season", "Phylum")]
df.gtdb.core[df.gtdb.core$OTU == "194105" & df.gtdb.core$Abundance >= 0.01,]
ggplot(df.gtdb.core[df.gtdb.core$OTU == "194105",]) + geom_col(aes(x = year, y = Abundance)) + facet_wrap(stn~season)
ggplot(df.gtdb.core[df.gtdb.core$OTU == "194105",]) + geom_col(aes(x = year, y = Abundance)) + facet_wrap(stn~season)
? taxa_core
core.gtdb <- taxa_core(ps.gtdb.abund.glom,
treatment = "region", subset = NULL,
frequency = 0.01,
abundance_threshold = 0.01)
uniq.core.gtdb <- unique_taxa(core.gtdb, treatment = "region")
tax_table(core.gtdb)[uniq.core.gtdb$South,]
tax_table(core.gtdb)[uniq.core.gtdb$North,]
df.gtdb.core <- psmelt(core.gtdb) # create dataframe from phyloseq object
df.gtdb.core <- df.gtdb.core[c("OTU", "Sample", "Abundance", "stn", "year", "season", "Phylum")]
ggplot(df.gtdb.core[df.gtdb.core$OTU == "194105",]) + geom_col(aes(x = year, y = Abundance)) + facet_wrap(stn~season)
v
df.gtdb.core
ggplot(df.gtdb1[df.gtdb1$OTU == "194105",]) + geom_col(aes(x = year, y = Abundance)) + facet_wrap(stn~season)
ggplot(df.gtdb1[df.gtdb1$sample == "20170809_SI3_771_0m",]) + geom_col(aes(x = year, y = Abundance, color = Phylum))
ggplot(df.gtdb1[df.gtdb1$sample == "20170809_SI3_771_0m",]) + geom_col(aes(x = Phylum, y = Abundance, color = Phylum))
df.gtdb1[df.gtdb1$sample == "20170809_SI3_771_0m",]
df.gtdb1
ggplot(df.gtdb1[df.gtdb1$sample == "20170522_SI3_319_0m",]) + geom_col(aes(x = Phylum, y = Abundance, color = Phylum))
ggplot(df.gtdb1[df.gtdb1$Sample == "20170809_SI3_771_0m",]) + geom_col(aes(x = Phylum, y = Abundance, color = Phylum))
ggplot(df.gtdb1[df.gtdb1$Sample == "20170809_SI3_771_0m",]) + geom_col(aes(x = Phylum, y = Abundance, fill = Phylum))
ggplot(df.gtdb1[df.gtdb1$OTU == "194105",]) + geom_col(aes(x = Phylum, y = Abundance, fill = Phylum))
ggplot(df.gtdb1[df.gtdb1$Sample == "20170809_SI3_771_0m",]) + geom_col(aes(x = Phylum, y = Abundance, fill = Phylum))
ggplot(df.gtdb1) + geom_col(aes(x = Phylum, y = Abundance, fill = Phylum)) + facet_wrap(~Sample)
